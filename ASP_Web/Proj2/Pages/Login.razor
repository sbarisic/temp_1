@page "/login"
@using Microsoft.AspNetCore.SignalR.Client
@using Proj2.Code
@using System.Security.Claims
@using Microsoft.Extensions.Primitives

@inject NavigationManager Navigation
@inject AuthStateProvider AuthStateProvider
@inject IHttpContextAccessor HttpContext

<PageTitle>Login</PageTitle>

<AuthorizeView>
	<Authorized>
		<form class="card" action="cookie/logout" method="get">
			<h5 class="card-header">Welcome, @LoggedInUsername</h5>
			<div class="card-body">
				<input class="btn btn-primary" type="submit" value="Logout" />
			</div>
		</form>
	</Authorized>

	<NotAuthorized>
		<div class="card">
			<h5 class="card-header">Login</h5>
			<form class="card-body" action="cookie/login" method="post">
				@if (ShowInvalidUsername) {
					<div class="alert alert-danger" role="alert">
						Invalid Username or Password
					</div>
				}

				<div class="row mb-3">
					<div class="form-group">
						<label for="input_username" class="form-label">
							Username
						</label>

						<div class="col-sm-10">
							<input id="input_username" class="form-control" type="text" name="username" />
						</div>
					</div>
				</div>

				<div class="row mb-3">
					<div class="form-group">
						<label for="input_password" class="form-label">
							Password
						</label>

						<div class="col-sm-10">
							<input id="input_password" class="form-control" type="password" name="password" size="50" />
						</div>
					</div>
				</div>

				@*<button class="btn btn-primary" @onclick="PerformLogin">Login</button>*@

				<input class="btn btn-primary" type="submit" value="Login" />
			</form>
		</div>


		@*<form action="cookie" method="post">
		<input type="text" name="name" />
		<input type="submit" />
		</form>*@
	</NotAuthorized>
</AuthorizeView>


@code {
	bool ShowInvalidUsername {
		get {
			/*StringValues IsInvalid = HttpContext.HttpContext.Request.Query["invalid"];

			if (!string.IsNullOrWhiteSpace(IsInvalid))
				return true;*/

			return false;
		}
	}

	string LoggedInUsername {
		get {
			return AuthStateProvider.GetDbUser()?.Username;
		}
	}
}