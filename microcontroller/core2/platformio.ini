; PlatformIO Project Configuration File
;
;   Build options: build flags, source filter
;   Upload options: custom upload port, speed and extra flags
;   Library options: dependencies, extra library storages
;   Advanced options: extra scripting
;
; Please visit documentation for the other options and examples
; https://docs.platformio.org/page/projectconf.html

[platformio]
; default_envs = core2
default_envs = core2_truckmodule ; Custom
; default_envs = core2_tdeck ; lilygo t-deck
; default_envs = core2_can ; lilygo can module
; default_envs = core2_door_controller

[env:core2]
platform = espressif32
board = esp32dev
framework = arduino
lib_deps = 
	adafruit/Adafruit SSD1306@^2.5.7
	labfruits/Mcp320x@^1.4.2
	bblanchon/ArduinoJson@^6.21.3
monitor_speed = 115200
; board_build.partitions = app_flash.csv

[env:core2_door_controller]
platform = espressif32
board = esp32dev
framework = arduino
monitor_speed = 115200
; board_build.partitions = app_flash.csv
build_flags =
	-D CORE2_DOOR_CONTROLLER
	-D CORE2_DISABLE_WIFI
	-D CORE2_DISABLE_SDCARD

[env:core2_truckmodule]
platform = espressif32
board = esp32dev
framework = arduino
lib_deps = 
	adafruit/Adafruit SSD1306@^2.5.7
	labfruits/Mcp320x@^1.4.2
	bblanchon/ArduinoJson@^6.21.3
monitor_speed = 115200
; board_build.partitions = app_flash.csv
build_flags =
	-D CORE2_TR_MOD

[env:core2_tdeck]
platform = espressif32
board = esp32s3box
framework = arduino
lib_deps = 
	adafruit/Adafruit SSD1306@^2.5.7
	labfruits/Mcp320x@^1.4.2
	bblanchon/ArduinoJson@^6.21.3
monitor_speed = 115200
board_build.partitions = app_flash_tdeck.csv
build_flags = 
	-D BOARD_HAS_PSRAM
	-D CORE2_TDECK

[env:core2_can]
platform = espressif32
board = esp32dev
framework = arduino
lib_deps = 
	adafruit/Adafruit SSD1306@^2.5.7
	labfruits/Mcp320x@^1.4.2
	bblanchon/ArduinoJson@^6.21.3
	kitesurfer1404/WS2812FX@^1.4.2
	miwagner/ESP32CAN@^0.0.1
monitor_speed = 115200
board_build.partitions = app_flash_can.csv
build_flags =
	-D CORE2_CAN
